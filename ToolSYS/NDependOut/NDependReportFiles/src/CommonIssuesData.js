var commonIssuesData='{"baselineAvailable":"True","baselineDesc":"Baseline is same code base snapshot.","rules":[{"id":"ND1003","name":"Avoid methods too big, too complex","cat":"Code Smells","url":"../../NDependReport.html?e=1#Query2368539037"},{"id":"ND1200","name":"Avoid interfaces too big","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query1702099707"},{"id":"ND1203","name":"Class with no descendant should be sealed if possible","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query2132437556"},{"id":"ND1206","name":"A stateless class or structure might be turned into a static type","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query3283078776"},{"id":"ND1207","name":"Non-static classes should be instantiated or turned to static","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query818888869"},{"id":"ND1208","name":"Methods should be declared static if possible","cat":"Object Oriented Design","url":"../../NDependReport.html?e=1#Query46159255"},{"id":"ND1301","name":"Types with disposable instance fields must be disposable","cat":"Design","url":"../../NDependReport.html?e=1#Query3767367450"},{"id":"ND1305","name":"Avoid namespaces with few types","cat":"Design","url":"../../NDependReport.html?e=1#Query3431837327"},{"id":"ND1400","name":"Avoid namespaces mutually dependent","cat":"Architecture","url":"../../NDependReport.html?e=1#Query1653453125"},{"id":"ND1401","name":"Avoid namespaces dependency cycles","cat":"Architecture","url":"../../NDependReport.html?e=1#Query628377565"},{"id":"ND1804","name":"Avoid publicly visible constant fields","cat":"Visibility","url":"../../NDependReport.html?e=1#Query456168778"},{"id":"ND1807","name":"Avoid public methods not publicly visible","cat":"Visibility","url":"../../NDependReport.html?e=1#Query2977263888"},{"id":"ND1900","name":"Fields should be marked as ReadOnly when possible","cat":"Immutability","url":"../../NDependReport.html?e=1#Query2144868306"},{"id":"ND2000","name":"Instance fields naming convention","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query1161431673"},{"id":"ND2007","name":"Methods name should begin with an Upper character","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query445447623"},{"id":"ND2013","name":"Avoid prefixing type name with parent namespace name","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query3170948257"},{"id":"ND2020","name":"Avoid various capitalizations for method name","cat":"Naming Conventions","url":"../../NDependReport.html?e=1#Query2904491536"},{"id":"ND2102","name":"Avoid defining multiple types in a source file","cat":"Source Files Organization","url":"../../NDependReport.html?e=1#Query3680765393"},{"id":"ND2700","name":"Float and Date Parsing must be culture aware","cat":"System.Globalization","url":"../../NDependReport.html?e=1#Query3992523250"}]}'